{"version":3,"sources":["../../src/formatter/framework/wrap-like.js","../../src/formatter/ts.js","utils/modules.js","index.js","App.js","App.module.scss","pages/home/index.js","pages/home/style.module.scss","../../src/shortcut sync nonrecursive //.js$","../../src/shortcut/to-swagger-axios.js","../../src/prettier/index.browser.js","../../src/formatter/vm.js","../../src/formatter/walli.js","../../src/formatter/swagger-axios/index.js","../../src/formatter/swagger-axios/axios-transform.js","../../src/shortcut/to-ts.js","../../src/shortcut/to-vm.js","../../src/shortcut/to-walli.js","reportWebVitals.js","../../src/types/Schema.js","../../src/index.js","../../src/util.js","../../src/transformer/swagger.js"],"names":["data","wrapLikeFormatter","bind","capitalize","require","camelCase","propertiesStr","properties","node","typeTrans","propertyTrans","Object","keys","map","name","p","currentNode","$ref","ref","isEmpty","type","schema","title","items","u","keyword","property","propertyString","proper","get","join","this","propertyDelimiter","toClassDefinition","cache","depth","inner","definitions","rootParent","clear","set","propertiesClass","id","pNode","call","classBodyDelimiter","uKeyword","has","add","generateClassString","options","assign","normalizeOptions","prefix","suffix","typeCapitalize","propertyCamelcase","Set","t","swagger","nodes","n","wrapString","x","fillType","cc","pascalCase","wrapLike","default","loose","description","head","str","isOptional","example","toString","filter","Boolean","allowEmptyValue","modulesRequire","reduce","modules","basename","extname","ReactDOM","render","StrictMode","document","getElementById","console","log","useLocalStorageState","key","initialValue","storeValue","React","useMemo","JSON","parse","localStorage","getItem","_","useState","v","setVal","initRef","useRef","useLayoutEffect","current","setItem","stringify","TextArea","Header","Content","Footer","CONFIG","axiosRequest","commonConfig","responseData","App","loading","setLoading","jsonText","setJsonText","config","transform","setTransform","setType","urlText","setUrlText","jsText","setJsText","onSearch","useCallback","val","eval","res","status","json","axios","trim","responseType","withCredentials","error","message","method","toUpperCase","url","response","String","useEffect","locale","zh_CN","theme","className","css","header","logo","Item","label","wrapperCol","style","width","value","select","onChange","Option","content","paramsEditor","onBeforeChange","editor","mode","smartIndent","tabSize","lint","foldGutter","gutters","placement","marginLeft","btns","Search","e","target","enterButton","placeholder","search","jsTextareaWrapper","destroyTooltipOnHide","autoFocus","rows","trigger","readOnly","jsTextarea","padding","body","spinning","wrapperClassName","delay","onJsonTextChange","module","exports","window","jsonlint","defaultJsonText","defaultValue","jsonTextState","resultText","setResult","err","container","jsonEditor","lineNumbers","resultEditor","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","to","flags","cb","use","format","pretty","text","opt","prettier","parser","plugins","tsParser","hasOwnProperty","fillDefault","camel","deep","childrenPropertiesStr","lowType","toLowerCase","camelType","includes","codes","axiosResult","push","addImport","getImportStatement","unshift","axiosKey","commonPrefix","tUrl","getTokens","forEach","pathChunk","paramType","pathTokens","reqCommonPrefix","argsChunks","token","hasData","query","formData","responseTypeKey","source","string","match","slice","replace","opts","paths","length","rootEnt","path","uniqPath","pathEnt","pathNode","apiNode","methodEnt","parameters","paramGroups","inType","keyName","SchemaPath","obj","def","responses","okNode","refPath","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getPaths","startsWith","split","getSchema","Array","isArray","find","item","parent","origin","refVal","rest","fillSchema","host","pReduce","presetFormat","vm","walli","ts","TransformUmbrella","transformers","formatter","callback","schemaPath","prettyOptions","Promise","tmp","output","catch","isPlainObj","word","uniqueid","lower","integer","number","object","array","boolean","function","rule","empty","lastIndex","test"],"mappings":"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","file":"static/js/main.802d89cd.chunk.js","sourcesContent":["/**\n * @file wrap-like\n * @author Cuttle Cong\n * @date 2018/4/16\n * @description\n */\nimport { SchemaPath } from '../../types/Schema'\nimport * as u from '../../util'\nconst capitalize = require('lodash.capitalize')\nconst camelCase = require('lodash.camelcase')\n\nfunction propertiesStr(properties, node, { typeTrans, propertyTrans }) {\n  const proper = (name, p, currentNode) => {\n    if (p.$ref) {\n      let ref = node.ref(p.$ref)\n      if (!ref.isEmpty()) {\n        p.type = ref.schema.title\n      }\n    }\n\n    if (p.items && p.items.$ref) {\n      let ref = node.ref(p.items.$ref)\n      if (!ref.isEmpty()) {\n        p.items.type = ref.schema.title\n      }\n    }\n\n    let type = typeTrans(u.type(u.keyword(p.type || 'any')))\n    let property = propertyTrans(u.keyword(name))\n\n    return this.propertyString(\n      { ...p, type, name: property },\n      propertiesStr.bind(this, p.properties, currentNode, {\n        typeTrans,\n        propertyTrans\n      })\n    )\n  }\n  if (!properties) {\n    return ''\n  }\n\n  return Object.keys(properties)\n    .map(name => {\n      return proper(name, properties[name], node.get(['properties', name]))\n    })\n    .join(this.propertyDelimiter || '\\n\\n')\n}\n\nfunction toClassDefinition(\n  node: SchemaPath,\n  {\n    // raw = false,\n    typeTrans,\n    propertyTrans,\n    cache,\n    depth = 1,\n    inner = false\n  } = {}\n) {\n  const schema = node.schema\n  const { type, properties, title } = schema\n\n  if (inner && type === 'object') {\n    let definitions = (node.rootParent.schema.definitions =\n      node.rootParent.schema.definitions || {})\n    let title = node.schema.title\n    if (!definitions[title]) {\n      definitions[title] = { ...node.schema }\n      node.clear()\n      node.set('$ref', '#/definitions/' + title)\n    }\n  }\n\n  let propertiesClass = ''\n  if (depth > 0) {\n    propertiesClass = Object.keys(properties || {})\n      .map(id => {\n        let pNode = node.get(['properties', id])\n        if (pNode.isEmpty()) {\n          return ''\n        }\n        if (!pNode.schema.title) {\n          pNode.schema.title = id\n        }\n\n        return toClassDefinition.call(this, pNode, {\n          // raw,\n          cache,\n          depth: depth - 1,\n          inner: true,\n          typeTrans,\n          propertyTrans\n        })\n      })\n      .join(this.classBodyDelimiter || '\\n\\n')\n  }\n\n  if (type === 'object') {\n    let id = typeTrans(u.uKeyword(title))\n    if (cache.has(id)) {\n      return propertiesClass\n    }\n    cache.add(id)\n\n    return `${propertiesClass}\n    ${this.generateClassString(\n      { ...schema, title: id },\n      propertiesStr.bind(this, properties, node, { typeTrans, propertyTrans })\n    )}`\n  }\n\n  if (type === 'array') {\n    // TODO\n  }\n\n  return propertiesClass + ''\n}\n\nfunction wrapLikeFormatter(node: SchemaPath, options = {}) {\n  this.options = Object.assign({}, this.options, options)\n  if (this.normalizeOptions) {\n    this.normalizeOptions(this.options)\n  }\n  const {\n    // raw = false,\n    prefix,\n    suffix,\n    depth = 1,\n    typeCapitalize = false,\n    propertyCamelcase = false\n  } = this.options\n\n  const cache = new Set([])\n  const typeTrans = typeCapitalize ? t => capitalize(t) : t => t\n  const propertyTrans = propertyCamelcase ? t => camelCase(t) : t => t\n\n  if (node.schema.swagger) {\n    const nodes = Object.keys(node.schema.definitions).map(name => {\n      const n = node.get(['definitions', name])\n      if (!n.has('title')) {\n        n.set('title', name)\n      }\n      return n\n    })\n    return (prefix || '') + this.wrapString(\n      nodes\n        .map(x =>\n          toClassDefinition.call(this, x, {\n            // raw,\n            depth,\n            cache,\n            propertyTrans,\n            typeTrans\n          })\n        )\n        .join(this.classBodyDelimiter || '\\n\\n')\n    ) + (suffix || '')\n  }\n\n  return this.wrapString(\n    toClassDefinition.call(this, node, {\n      // raw,\n      depth,\n      cache,\n      propertyTrans,\n      typeTrans\n    })\n  )\n}\n\nexport default function create(data) {\n  return wrapLikeFormatter.bind(data)\n}\n","/**\n * @file vm\n * @author Cuttle Cong\n * @date 2018/4/14\n * @description\n */\nimport * as u from '../util'\nimport * as cc from 'change-case'\n\nconst wrapLike = require('./framework/wrap-like').default\n\nexport function fillType(p = {}) {\n  p = {...p}\n  if (!p.type) {\n    return 'any'\n  }\n\n  switch (p.type) {\n    case 'number':\n    case 'string':\n    case 'boolean':\n    case 'any':\n      return p.type\n    case 'integer':\n      return 'number'\n    case 'date':\n      return 'Date'\n    case 'object':\n      return 'Object'\n    case 'array':\n      if (p.items.type) {\n        return `${fillType(p.items)}[]`\n      }\n      return '[]'\n    default:\n      return cc.pascalCase(p.type)\n  }\n}\n\nexport default wrapLike({\n  propertyDelimiter: '\\n',\n  options: {\n    loose: true\n  },\n  generateClassString({description, title, type}, propertiesStr) {\n    const head = description\n      ? `/**\n     * ${description || ''}\n     */`\n      : ''\n\n    return `${head}\n    export interface ${cc.pascalCase(title)} {\n      ${propertiesStr()}\n    }\n    `\n  },\n  wrapString(str) {\n    return str\n  },\n  propertyString(p) {\n    const example = u.toString(p.example || '')\n    let head =\n      example || p.description\n        ? ['/**', p.description && ` * ${p.description || ''}`, example && ` * @example ${example}`, ' */\\n']\n            .filter(Boolean)\n            .join('\\n')\n        : ''\n\n    let isOptional\n    if (this.options.loose) {\n      isOptional = true\n    } else {\n      isOptional = !!p.allowEmptyValue\n    }\n    return head + ` ${p.name}${isOptional ? '?' : ''}: ${fillType(p)};`\n  }\n})\n","import { dirname, basename, extname } from 'path'\nconst modulesRequire = require.context('../../../src/shortcut', false, /\\.js$/)\n\nconst keys = modulesRequire.keys()\n\nconst modules = keys.reduce((modules, name) => {\n  modules[basename(name, extname(name))] = modulesRequire(name)\n  return modules\n}, {})\n\nexport default modules\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from 'react'\nimport css from './App.module.scss'\nimport axios from 'axios'\nimport { Layout, Input, Select, ConfigProvider, Form, Space, Button, Tooltip, Popover, Spin, notification } from 'antd'\nimport zh_CN from 'antd/lib/locale/zh_CN'\nimport HomePage from './pages/home'\nimport modules from './utils/modules'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\n\nconst useLocalStorageState = (key, initialValue) => {\n  const storeValue = React.useMemo(() => {\n    try {\n      return JSON.parse(localStorage.getItem(`localStorage_${key}`))\n    } catch (_) {}\n    return null\n  }, [])\n  const [v, setVal] = React.useState(storeValue || initialValue)\n  const initRef = React.useRef(false)\n\n  React.useLayoutEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true\n      return\n    }\n    localStorage.setItem(`localStorage_${key}`, JSON.stringify(v))\n  }, [v])\n\n  return [v, setVal]\n}\n\nconst { TextArea } = Input\nconst { Header, Content, Footer } = Layout\n\nconst CONFIG = JSON.stringify(\n  {\n    axiosRequest: 'axios',\n    commonConfig: { responseData: true },\n    prefix: `/* eslint-disable */\\n// @ts-nocheck\\n`,\n    suffix: ''\n  },\n  null,\n  2\n)\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false)\n  const [jsonText, setJsonText] = React.useState('{}')\n  const [transform, setTransform] = useLocalStorageState('transform-type', { type: 'to-swagger-axios', config: CONFIG })\n  const [type, setType] = useLocalStorageState('import-type', 'url')\n  const [urlText, setUrlText] = useLocalStorageState(\n    'import-value-url',\n    'http://tutor-test.zhenguanyu.com/tutor-cyber-corpus/swagger/v2/api-docs'\n  )\n  const [jsText, setJsText] = useLocalStorageState('import-value-js', '')\n  const onSearch = React.useCallback(\n    async (val) => {\n      setLoading(true)\n      try {\n        if (type === 'js') {\n          val = jsText\n          if (!val) {\n            return\n          }\n          const res = await eval(val)\n          if (res.status === 200) {\n            setJsonText(JSON.stringify(await res.json(), null, 2))\n          }\n        } else {\n          val = urlText\n          if (!val) {\n            return\n          }\n          const res = await axios.get(val.trim(), { responseType: 'json', withCredentials: true })\n          if (res.status === 200) {\n            setJsonText(JSON.stringify(res.data, null, 2))\n          }\n        }\n      } catch (e) {\n        notification.error({\n          message: '请求出错',\n          description: e.config\n            ? `${e.config.method?.toUpperCase()} ${e.config.url} (${e.response?.status || '-'})`\n            : String(e)\n        })\n      }\n      setLoading(false)\n    },\n    [type, urlText, jsonText]\n  )\n\n  React.useEffect(() => {\n    onSearch()\n  }, [])\n\n  const config = React.useMemo(() => {\n    try {\n      return JSON.parse(transform.config)\n    } catch (_) {}\n    return null\n  }, [transform.config])\n\n  return (\n    <ConfigProvider locale={zh_CN} theme={'light'}>\n      <Layout className={css.App} theme={'light'}>\n        <Header className={css.header}>\n          <span className={css.logo}>Transform json schema</span>\n\n          <Form.Item label={'转换类型'} wrapperCol={{ style: { width: 150 } }}>\n            <Select\n              value={transform.type}\n              className={css.select}\n              onChange={(value) => {\n                setTransform((v) => ({ ...v, type: value }))\n              }}\n            >\n              {Object.keys(modules).map((name) => (\n                <Select.Option key={name} value={name}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Popover\n            content={\n              <CodeMirror\n                className={css.paramsEditor}\n                value={transform.config}\n                onBeforeChange={(editor, data, value) => {\n                  setTransform((v) => ({ ...v, config: value }))\n                }}\n                options={{\n                  mode: 'application/json',\n                  theme: 'material',\n                  smartIndent: true,\n                  tabSize: 2,\n                  lint: true,\n                  foldGutter: true,\n                  gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers']\n                }}\n              />\n            }\n          >\n            <Tooltip title={'设置转换配置'} placement={'right'}>\n              <Button style={{ marginLeft: 10 }}>设置</Button>\n            </Tooltip>\n          </Popover>\n\n          <div className={css.btns}>\n            <Select value={type} onChange={(v) => setType(v)}>\n              <Select.Option value={'url'}>从 URL 导入</Select.Option>\n              <Select.Option value={'js'}>从 JS 脚本 导入</Select.Option>\n            </Select>\n            {type === 'url' && (\n              <Input.Search\n                value={urlText}\n                onChange={(e) => setUrlText(e.target.value)}\n                enterButton=\"导入\"\n                placeholder={'从 URL 导入'}\n                onSearch={onSearch}\n                className={css.search}\n              />\n            )}\n            {type === 'js' && (\n              <div className={css.jsTextareaWrapper}>\n                <Popover\n                  destroyTooltipOnHide\n                  content={\n                    <TextArea\n                      autoFocus\n                      style={{ width: 400 }}\n                      rows={10}\n                      value={jsText}\n                      onChange={(e) => setJsText(e.target.value)}\n                      placeholder={'输入 JS 请求脚本，具体可以使用 Chrome Network 中的 Copy as fetch'}\n                    />\n                  }\n                  trigger={'click'}\n                >\n                  <Input.Search\n                    readOnly\n                    onSearch={onSearch}\n                    className={css.jsTextarea}\n                    value={jsText}\n                    enterButton=\"导入\"\n                    placeholder={'输入 JS 请求脚本，具体可以使用 Chrome Network 中的 Copy as fetch'}\n                  />\n                </Popover>\n              </div>\n            )}\n\n            {/*<Tooltip title={'设置'}>*/}\n            {/*  <Popover placement=\"bottomRight\" title={'设置自定义请求'} content={(*/}\n            {/*    <TextArea style={{width: 400}} rows={10}*/}\n            {/*              placeholder={'输入 JS 请求脚本，具体可以使用 Chrome Network 中的 Copy as fetch'}/>*/}\n            {/*  )} trigger=\"click\">*/}\n            {/*    <div className={css.clickable} style={{color: '#fff'}}>*/}\n            {/*      <SettingOutlined/>*/}\n            {/*    </div>*/}\n            {/*  </Popover>*/}\n            {/*</Tooltip>*/}\n          </div>\n        </Header>\n        <Content style={{ padding: '0 50px' }} className={css.body}>\n          <Spin spinning={loading} wrapperClassName={css.loading} delay={400}>\n            <HomePage type={transform.type} config={config} jsonText={jsonText} onJsonTextChange={setJsonText} />\n          </Spin>\n        </Content>\n      </Layout>\n    </ConfigProvider>\n  )\n}\n\nexport default App\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"header\":\"App_header__2L3DO\",\"search\":\"App_search__13zFb\",\"jsTextareaWrapper\":\"App_jsTextareaWrapper__25Ez6\",\"jsTextarea\":\"App_jsTextarea__2yuDh\",\"btns\":\"App_btns__15KWL\",\"loading\":\"App_loading__3Rsj5\",\"clickable\":\"App_clickable__Fqvmh\",\"logo\":\"App_logo__2qPv-\",\"body\":\"App_body__2a4FT\",\"paramsEditor\":\"App_paramsEditor__oCSss\"};","import React from 'react';\nimport useUncontrolled from '@rcp/use.uncontrolled';\nimport css from './style.module.scss'\n\nimport {Controlled as CodeMirror, UnControlled as UnControlledCodeMirror} from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n// // 代码模式\nimport 'codemirror/mode/javascript/javascript';\n\n// 添加折叠\nimport 'codemirror/addon/fold/brace-fold.js';\nimport 'codemirror/addon/fold/comment-fold.js';\nimport 'codemirror/addon/fold/foldcode.js';\nimport 'codemirror/addon/fold/foldgutter.js';\nimport 'codemirror/addon/fold/foldgutter.css';\n\n// 括号匹配\nimport 'codemirror/addon/edit/matchbrackets.js';\n\n// 自动补全\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/anyword-hint.js';\n\nimport 'codemirror/addon/lint/json-lint.js';\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint.js';\n\nimport jsonlint from 'jsonlint-mod';\nimport modules from \"../../utils/modules\";\nimport {notification} from \"antd\";\n\n// eslint-disable-next-line dot-notation\nwindow['jsonlint'] = jsonlint; // 不能删除，json-lint有依赖\n\n\n\nfunction HomePage({type = 'to-ts', config, defaultJsonText, jsonText, onJsonTextChange}: any) {\n  const [jsonTextState, setJsonText] = useUncontrolled({\n    value: jsonText,\n    onChange: onJsonTextChange,\n    defaultValue: defaultJsonText || '{}',\n  })\n  const [resultText, setResult] = React.useState('')\n\n  React.useEffect(() => {\n    const json = JSON.parse(jsonTextState)\n    if (json && modules[type]) {\n      modules[type](json, config || {}, (err, data) => {\n        if (err) {\n          console.error(err)\n          notification.error({message: String(err)})\n        } else {\n          setResult(data)\n        }\n      })\n    }\n  }, [type, config, jsonTextState])\n\n  return (\n    <div className={css.container}>\n      <CodeMirror\n        className={css.jsonEditor}\n        value={jsonTextState}\n        onBeforeChange={(editor, data, value) => {\n          setJsonText(value);\n        }}\n        options={{\n          mode: 'application/json',\n          theme: 'material',\n          lineNumbers: true,\n          smartIndent: true,\n          tabSize: 2,\n          lint: true,\n          foldGutter: true,\n          gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n        }}\n      />\n\n      <CodeMirror\n        className={css.resultEditor}\n        value={resultText}\n        onBeforeChange={(editor, data, value) => {\n          setResult(value);\n        }}\n        options={{\n          mode: 'text/typescript',\n          theme: 'material',\n          lineNumbers: true,\n          smartIndent: true,\n          tabSize: 2,\n          foldGutter: true,\n          gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n        }}\n      />\n    </div>\n  );\n}\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__TPmxo\",\"jsonEditor\":\"style_jsonEditor__dG7Rz\",\"resultEditor\":\"style_resultEditor__1ZfRb\"};","var map = {\n\t\"./to-swagger-axios.js\": 427,\n\t\"./to-ts.js\": 448,\n\t\"./to-vm.js\": 449,\n\t\"./to-walli.js\": 450\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 426;","/**\n * @file to-vm\n * @author Cuttle Cong\n * @date 2018/4/15\n * @description\n */\nconst to = require('../')\nconst swagger = require('../transformer/swagger')\n\nmodule.exports = function(json, flags, cb) {\n  to()\n    .use(swagger, { filter: flags.filter })\n    .format(\n      json,\n      'swagger-axios',\n      { ...flags, pretty: true },\n      cb\n    )\n}\n","import prettier from 'prettier/esm/standalone.mjs'\nimport tsParser from 'prettier/esm/parser-typescript.mjs'\n\n\nmodule.exports = function(text, opt) {\n  return prettier.format(text, {\n    parser: 'typescript',\n    ...opt,\n    plugins: [tsParser]\n  })\n}\n","/**\n * @file vm\n * @author Cuttle Cong\n * @date 2018/4/14\n * @description\n */\nimport * as u from '../util'\nimport * as cc from 'change-case'\n\nconst wrapLike = require('./framework/wrap-like').default\n\nfunction fillDefault(p = {}) {\n  p = {...p}\n  if (p.hasOwnProperty('default')) {\n    return p\n  }\n\n  if (!p.type) {\n    delete p.default\n    return p\n  }\n\n  switch (p.type) {\n    case 'number':\n    case 'string':\n    case 'integer':\n      p.default = '\"\"'\n      return p\n    case 'date':\n    case 'boolean':\n      delete p.default\n      return p\n    case 'object':\n      p.default = '{}'\n      return p\n    case 'array':\n      p.default = '[]'\n      return p\n    default:\n      p.default = `${cc.pascalCase(p.type)}.create()`\n      return p\n  }\n}\n\nexport default wrapLike({\n  options: {\n    default: true\n  },\n  wrapString(str) {\n    return `import { Root, observable } from 'react-mobx-vm'\\n` + str\n  },\n  generateClassString({description, title}, propertiesStr) {\n    title = cc.pascalCase(title)\n    return `\n    /**\n     * ${description || ''}\n     * @typedef {${title}}\n     */\n    export class ${title} extends Root {\n      ${propertiesStr()}\n    }\n    `\n  },\n  propertyString(p) {\n    if (this.options.default) {\n      p = fillDefault(p)\n    }\n    return (\n      '/**\\n' +\n      ` * ${p.description || ''}\\n` +\n      ` * @example ${u.toString(p.example || '')}\\n` +\n      ` * @type {${p.type}}\\n` +\n      ' */\\n' +\n      ` @observable ${p.name} ${p.hasOwnProperty('default') ? '= ' + p.default : ''}`\n    )\n  }\n})\n","/**\n * @file vm\n * @author Cuttle Cong\n * @date 2018/4/14\n * @description\n */\nconst u = require('../util')\nconst camel = require('lodash.camelcase')\nconst capitalize = require('lodash.capitalize')\nconst wrapLike = require('./framework/wrap-like').default\n\nexport default wrapLike({\n  options: {\n    deep: false\n  },\n  normalizeOptions(options) {\n    if (options.deep) {\n      options.depth = 0\n    }\n  },\n  propertyDelimiter: '\\n',\n  classBodyDelimiter: '\\n\\n',\n  wrapString(str) {\n    return `import * as t from 'walli'\\n` + str\n  },\n  generateClassString({ description, title }, propertiesStr) {\n    // const capTitle = capitalize(title)\n    return `\n    /**\n     * ${description || ''}\n     * @typedef {${title}Class}\n     */\n    export class ${title}Class extends t.Verifiable {\n      _check(req) {\n        return t.leq({${propertiesStr()}}).check(req)\n      }\n    }\n    export const ${camel(title)} = t.util.createFinalVerifiable(${title}Class)\n    `\n  },\n  propertyString(p, childrenPropertiesStr) {\n    let lowType = p.type.toLowerCase()\n    let camelType = camel(p.type)\n\n    if (this.options.deep && 'object' === lowType) {\n      return `${p.name}: {${childrenPropertiesStr()}},`\n    }\n    // final\n    if (['array', 'string', 'object', 'boolean', 'number'].includes(lowType)) {\n      return `${p.name}: t.${lowType},`\n    }\n\n    // custom\n    return `${p.name}: ${camelType},`\n  }\n})\n","import { SchemaPath } from '../../types/Schema'\nimport tsTypeTransform from '../ts'\nimport axiosTransform from './axios-transform'\nimport camelCase from 'lodash.camelcase'\n\nconst getImportStatement = (source, key = camelCase(source)) => {\n  return {\n    code: `import ${key} from ${JSON.stringify(source)};`,\n    key\n  }\n}\n\nconst getTokens = (string) => {\n  const chunks = string.match(/{(.+?)}/g)\n  return (chunks || []).map((x) => x.slice(1, -1))\n}\n\nconst tUrl = (url) => url.replace(/{(.+?)}/g, `:$1`)\n\nexport default function swaggerAxios(\n  node: SchemaPath,\n  {\n    axiosRequest = 'axios',\n    commonConfig = { responseData: true },\n    prefix,\n    suffix,\n    ...options\n  }: { axiosRequest?: string } = {}\n): { tsType: string, api: string, index: string } {\n  const codes = [tsTypeTransform(node, options)]\n  const axiosResult = axiosTransform(node, options)\n  if (axiosResult) {\n    codes.push('\\n// Api code start')\n    const addImport = (...args) => {\n      const { code, key } = getImportStatement(...args)\n      codes.unshift(code)\n      return key\n    }\n    const axiosKey = addImport(axiosRequest, 'axios')\n    addImport('axios', '{ AxiosRequestConfig }')\n    addImport('lodash.merge', 'merge')\n    addImport('decorate-axios', '{ responseDataAxios, pathRegexpAxios, stringDataAxios }')\n\n    codes.push(\n      `responseDataAxios()(${axiosKey});`,\n      `pathRegexpAxios()(${axiosKey});`,\n      `stringDataAxios()(${axiosKey});\\n`\n    )\n    const { commonPrefix, data } = axiosResult\n    codes.push(`const COMMON_PREFIX = ${JSON.stringify(tUrl(commonPrefix) || '')};`)\n    codes.push(`const COMMON_CONFIG = ${JSON.stringify(commonConfig)};\\n`)\n\n    const tokens = getTokens(commonPrefix)\n    Object.keys(data).forEach((pathChunk) => {\n      Object.keys(data[pathChunk]).forEach((method) => {\n        const { responseType, paramType } = data[pathChunk][method]\n        const pathTokens = getTokens(pathChunk)\n        const reqCommonPrefix = method + ' ' + pathChunk\n        const argsChunks = []\n        pathTokens.forEach((token) => {\n          argsChunks.push(`${token}: any`)\n        })\n\n        let hasData = false\n        if (paramType) {\n          if (paramType.query) {\n            codes.push(paramType.query.code)\n            argsChunks.push(`params?: ${paramType.query.name}`)\n          }\n\n          hasData = paramType.body || paramType.formData\n          if (paramType.body) {\n            codes.push(paramType.body.code)\n            argsChunks.push(`data?: ${paramType.body.name}`)\n          } else if (paramType.formData) {\n            argsChunks.push(`data?: FormData`)\n          }\n        }\n\n        let responseTypeKey = 'any'\n        if (responseType && responseType['200']) {\n          responseTypeKey = responseType['200'].name\n          if (responseType['200'].code) {\n            codes.push(responseType['200'].code)\n          }\n        }\n\n        argsChunks.push(`axiosRequestConfig?: AxiosRequestConfig`)\n        codes.push(`\n      export function ${camelCase(reqCommonPrefix)}(${argsChunks.join(', ')}) {\n        return ${axiosKey}<${responseTypeKey}>(merge({\n          url: COMMON_PREFIX + ${JSON.stringify(tUrl(pathChunk))},\n          method: ${JSON.stringify(method)},\n          pathData: {\n            ${pathTokens.map((token) => `${token},`).join('\\n')}\n          },\n          ${paramType && paramType.query ? 'params,' : ''}${hasData ? 'data,' : ''}\n        }, COMMON_CONFIG, axiosRequestConfig))\n      }\n      `)\n      })\n    })\n  }\n\n  return `${prefix || ''}${codes.join('\\n')}${suffix || ''}`\n}\n","import {SchemaPath} from \"../../types/Schema\";\nimport toTs, {fillType} from \"../ts\";\nimport groupBy from \"lodash.groupby\";\nimport * as cc from \"change-case\";\nimport commonPathPrefix from 'common-path-prefix'\n\n\n/**\n import twAxios from '@/shared/utils/tw-axios';\n import { AxiosRequestConfig } from 'axios';\n import { ResponseBody } from '@/shared/services/types/common';\n import { CurrentUserVo, TeacherDetailVo } from '@/shared/services/types/atm-user';\n\n export function getUsersCurrent(config?: AxiosRequestConfig) {\n  return twAxios.get('/users/current', {\n    endpointSource: 'atm-user:api',\n    responseData: true,\n    ...config,\n  }) as Promise<ResponseBody<CurrentUserVo>>;\n}\n\n export function getTeachersCurrent(config?: AxiosRequestConfig) {\n  return twAxios.get('/teachers/current', {\n    endpointSource: 'atm-user:api',\n    responseData: true,\n    ...config,\n  }) as Promise<ResponseBody<TeacherDetailVo>>;\n}\n */\n\nexport default function axiosTransform(node: SchemaPath, opts?: any) {\n  if (!node.schema.paths || !Object.keys(node.schema.paths).length) {\n    return null\n  }\n\n  /*\n  {\n    commonPrefix: '',\n    data: {\n      '/prefix/api': {\n         'get': {\n           params: {}\n         }\n      }\n    }\n  }\n   */\n  const rootEnt = {}\n  const paths = Object.keys(node.schema.paths)\n  const commonPrefix = commonPathPrefix(paths)\n  paths.map(path => {\n    const uniqPath = path.slice(commonPrefix.length)\n    const pathEnt = rootEnt[uniqPath] = {}\n    const pathNode = node.schema.paths[path]\n\n    const methods = Object.keys(pathNode)\n    methods.forEach(method => {\n      const apiNode = pathNode[method]\n      const methodEnt = pathEnt[method] = {}\n\n      const prefix = `${uniqPath.replace(/\\//, '_')}_${method}`\n\n      if (apiNode.parameters) {\n        const paramGroups = groupBy(apiNode.parameters, 'in')\n        const paramType = methodEnt.paramType = {}\n        Object.keys(paramGroups).forEach((inType) => {\n          const keyName = cc.pascalCase(`${prefix}_${inType}_Params`)\n          paramType[inType] = {\n            name: keyName,\n            code: toTs(new SchemaPath({\n              type: 'object',\n              properties: paramGroups[inType].reduce((obj, def) => {\n                obj[def.name] = {\n                  ...def,\n                  ...def.schema\n                }\n                return obj\n              }, {}),\n              title: keyName,\n            }, node), {...opts, depth: 2}).trim()\n          }\n        })\n\n\n        const responseType = methodEnt.responseType = {}\n\n        if (apiNode.responses['200']) {\n          const keyName = cc.pascalCase(`${prefix}_Res200`)\n          const okNode = {...apiNode.responses['200'], ...apiNode.responses['200'].schema}\n\n          if (okNode.type === 'object') {\n            responseType['200'] = {\n              name: keyName,\n              code: toTs(new SchemaPath({\n                title: keyName,\n                ...okNode,\n              }, node)).trim()\n            }\n          } else if (okNode.$ref) {\n            const refPath = node.ref(okNode.$ref)\n            responseType['200'] = {\n              name: keyName,\n              code: `export type ${keyName} = ${cc.pascalCase(refPath.schema.title)}`\n            }\n          } else if (okNode.type === 'array') {\n            if (!okNode.items || !okNode.items.$ref) {\n              responseType['200'] = {\n                name: keyName,\n                code: `export type ${keyName} = ${fillType(okNode)}`\n              }\n            } else {\n              const refPath = node.ref(okNode.items.$ref)\n              if (refPath && !refPath.isEmpty()) {\n                responseType['200'] = {\n                  name: keyName,\n                  code: `export type ${keyName} = ${cc.pascalCase(refPath.schema.title)}[]`\n                }\n              } else {\n                responseType['200'] = {\n                  name: keyName,\n                  code: `export type ${keyName} = any[]`\n                }\n              }\n            }\n          } else {\n            responseType['200'] = {\n              name: keyName,\n              code: `export type ${keyName} = ${fillType(okNode)}`\n            }\n          }\n        }\n      }\n    })\n  })\n\n  return {\n    commonPrefix,\n    data: rootEnt\n  }\n}\n","/**\n * @file to-vm\n * @author Cuttle Cong\n * @date 2018/4/15\n * @description\n */\nconst to = require('../')\nconst swagger = require('../transformer/swagger')\n\nmodule.exports = function(json, flags, cb) {\n  to()\n    .use(swagger, { filter: flags.filter })\n    .format(\n      json,\n      'ts',\n      { ...flags, pretty: true },\n      cb\n    )\n}\n","/**\n * @file to-vm\n * @author Cuttle Cong\n * @date 2018/4/15\n * @description\n */\nconst to = require('../')\nconst swagger = require('../transformer/swagger')\n\nmodule.exports = function(json, flags, cb) {\n  to()\n    .use(swagger, { filter: flags.filter })\n    .format(\n      json,\n      'vm',\n      { ...flags, pretty: true },\n      cb\n    )\n}\n","/**\n * @file to-vm\n * @author Cuttle Cong\n * @date 2018/4/15\n * @description\n */\nconst to = require('../')\nconst swagger = require('../transformer/swagger')\n\nmodule.exports = function(json, flags, cb) {\n  to()\n    .use(swagger, { filter: flags.filter })\n    .format(\n      json,\n      'walli',\n      { ...flags, pretty: true },\n      cb\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\n * @file Schema\n * @author Cuttle Cong\n * @date 2018/4/14\n * @description\n */\nimport get from 'lodash.get'\nimport set from 'lodash.set'\n\nexport type PositiveInteger = number\n\nexport type PositiveIntegerDefault0 = PositiveInteger\n\nexport type SimpleTypes = 'array' | 'boolean' | 'integer' | 'null' | 'number' | 'object' | 'string'\n\nexport type StringArray = string[]\n\nexport type SchemaArray = Schema[]\n\nexport type Schema = {\n  id?: string,\n  $ref?: string,\n  $schema?: string,\n  title?: string,\n  description?: string,\n  default?: any,\n  multipleOf?: number,\n  maximum?: number,\n  exclusiveMaximum?: boolean,\n  minimum?: number,\n  exclusiveMinimum?: boolean,\n  maxLength?: PositiveInteger,\n  minLength?: PositiveIntegerDefault0,\n  pattern?: string,\n  additionalItems?: boolean | Schema,\n  items?: Schema | SchemaArray,\n  maxItems?: PositiveInteger,\n  minItems?: PositiveIntegerDefault0,\n  uniqueItems?: boolean,\n  maxProperties?: PositiveInteger,\n  minProperties?: PositiveIntegerDefault0,\n  required?: StringArray,\n  additionalProperties?: boolean | Schema,\n  definitions?: {\n    [key: any]: Schema\n  },\n  properties?: {\n    [key: any]: Schema\n  },\n  patternProperties?: {\n    [key: any]: Schema\n  },\n  dependencies?: {\n    [key: any]: Schema | StringArray\n  },\n  enum?: Array<any>,\n  type?: SimpleTypes | Array<SimpleTypes>,\n  allOf?: SchemaArray,\n  anyOf?: SchemaArray,\n  oneOf?: SchemaArray,\n  not?: Schema\n}\n\nfunction getPaths(string: string) {\n  if (string.startsWith('#')) {\n    return string\n      .replace(/^#+/, '')\n      .split('/')\n      .filter(Boolean)\n  }\n\n  return string\n}\n\nfunction getSchema(schema, paths) {\n  for (const path of paths) {\n    if (!schema) return null\n    if (schema.hasOwnProperty(path)) {\n      schema = schema[path]\n    } else if (Array.isArray(schema)) {\n      schema = schema.find(item => item.title === path)\n    } else {\n      return null\n    }\n  }\n  return schema\n}\n\nexport class SchemaPath {\n  constructor(schema: Schema, parent: SchemaPath = null) {\n    this.schema = schema\n    this.parent = parent\n  }\n\n  schema: Schema\n  parent: SchemaPath\n  clear() {\n    Object.keys(this.schema).forEach(name => {\n      delete this.schema[name]\n    })\n  }\n  get rootParent() {\n    let p = this\n    while (p.parent) {\n      p = p.parent\n    }\n    return p\n  }\n  get(paths: string | string[]) {\n    return new SchemaPath(getSchema(this.schema, paths), this)\n  }\n  has(paths: string | string[]) {\n    return !!getSchema(this.schema, paths)\n  }\n  set(paths, val) {\n    set(this.schema, paths, val)\n    return this\n  }\n  isEmpty() {\n    return !this.schema\n  }\n  get fillSchema() {\n    let origin = this.schema\n    if (origin && origin.$ref) {\n      const refVal = this.ref()\n      const {$ref, ...rest} = origin\n      return Object.assign({}, rest, refVal.fillSchema)\n    }\n    return origin\n  }\n  ref(ref = this.schema.$ref) {\n    const paths = getPaths(ref)\n    let host = this\n    let refVal\n    do {\n      refVal = host.get(paths)\n      host = host.parent\n    } while (host && refVal.isEmpty())\n\n    return refVal\n  }\n}\n","// @flow\nimport type { Formatter } from './types/Formatter'\nimport { SchemaPath } from './types/Schema'\nimport type { Schema } from './types/Schema'\nimport type { Transformer } from './types/Transformer'\nimport prettier from './prettier'\nconst pReduce = require('p-reduce')\n\nconst presetFormat = {\n  vm: require('./formatter/vm').default,\n  walli: require('./formatter/walli').default,\n  ts: require('./formatter/ts').default,\n  'swagger-axios': require('./formatter/swagger-axios/index').default,\n}\n\nclass TransformUmbrella {\n  transformers: [Transformer, any][] = []\n  use(t: Transformer, options: any): TransformUmbrella {\n    this.transformers.push([t, options])\n    return this\n  }\n  format(\n    schema: Schema,\n    formatter: Formatter | string,\n    options: {\n      pretty?: boolean,\n      prettyOptions?: {}\n    } = {},\n    callback?: (err: null | Error, output: any) => any\n  ): any | Promise<any>\n  {\n    const schemaPath = new SchemaPath(schema)\n    if (typeof options === 'function') {\n      callback = options\n      options = { pretty: true }\n    } else {\n      options = {pretty: true, prettyOptions: {}, ...options}\n    }\n\n    pReduce(\n      this.transformers,\n      (schemaPath, [t, opt]) => {\n        return Promise.resolve(t(schemaPath, opt)).then(() => schemaPath)\n      },\n      schemaPath\n    )\n      .then(schemaPath => {\n        if (typeof formatter === 'string') {\n          let tmp = formatter\n          formatter = presetFormat[formatter]\n          if (!formatter) {\n            throw new Error('Formatter: ' + tmp + ' is not exists.')\n          }\n        }\n\n        return formatter(schemaPath, options)\n      })\n      .then(output => {\n        if (options.pretty && typeof output === 'string') {\n          output = prettier(output, options.prettyOptions)\n        }\n        // console.log(schemaPath.schema)\n        callback && callback(null, output)\n      })\n      .catch(err => {\n        callback && callback(err)\n      })\n  }\n}\n\nmodule.exports = function jsonSchemaTransform() {\n  return new TransformUmbrella()\n}\n","/**\n * @file util\n * @author Cuttle Cong\n * @date 2018/4/15\n * @description\n */\nconst isPlainObj = require('is-plain-obj')\n\nexports.keyword = function(word) {\n  return (word || '').replace(/[^\\w]/g, '_')\n}\n\nconst uniqueid = require('lodash.uniqueid')\nexports.uKeyword = function(word) {\n  return exports.keyword(word) || uniqueid('_')\n}\n\nexports.type = function(type = '') {\n  let lower = type.toLowerCase()\n  return (\n    {\n      integer: 'number',\n      number: 'number',\n      string: 'string',\n      object: 'object',\n      array: 'array',\n      boolean: 'boolean',\n      function: 'function'\n    }[lower] || type\n  )\n}\n\n/**\n * To pretty string from anything.\n * @param rule\n * @param {any} empty - the string placeholder when equals undefined\n * @return {any}\n */\nfunction toString(rule, { empty = 'undefined' } = {}) {\n  if (typeof rule === 'undefined') {\n    return empty\n  }\n\n  if (Array.isArray(rule)) {\n    return `[${rule.map(x => JSON.stringify(x)).join(', ')}]`\n  }\n  if (isPlainObj(rule)) {\n    return JSON.stringify(rule)\n  }\n\n  if (typeof rule === 'string') {\n    return rule\n  }\n\n  if (rule === null) {\n    return 'null'\n  }\n\n  return rule.toString() || ''\n}\n\nexports.toString = toString\n","/**\n * @file swagger\n * @author Cuttle Cong\n * @date 2018/4/15\n * @description\n */\nimport { SchemaPath } from '../types/Schema'\n\nmodule.exports = function(node: SchemaPath, { filter = /.*/ } = {}) {\n  if (node.schema.swagger) {\n    Object.keys(node.schema.definitions)\n      .filter(name => {\n        filter.lastIndex = 0\n        if (!filter.test(name)) {\n          delete node.schema.definitions[name]\n          return false\n        }\n        return true\n      })\n      .forEach(name => {\n        const n = node.get(['definitions', name])\n        if (n.get('title').isEmpty()) {\n          n.set('title', name)\n        }\n      })\n  }\n}\n"],"sourceRoot":""}